{{/* ================= Don't edit between the equals signs ======================= 

There are a few different functions you can use when building your config file below.  These functions will incorperate information
of various sorts, and are always in the format:

{{ template "<NAME>" "<VALUE>" }}

where <NAME> is the name of the function as specified below, and <VALUE> is the value you want to pass into the function.  This
value is handled differently for each function as described.

Available Functions:

NAME          Description
------------------------------------------
GET_VALUE     This will query consul for the value associated with the key you provide.   Keys are defined as the levels in your
              YAML config file with collapsed and joined by a "/" symbol.   So, as an example, if your config contains the following
              set of stanzas:

                server:
                  httpd:
                    port: 8080
   
              Then to get the value 8080, you would specify a key of "server/httpd/port". Note that when specifying the key
              any <env> you may have applied in the config file is ignored as that is handled automatically.

GET_SERVICE   This will query consul for a service associated with the key provided.  This key is in the format:
              
              <type>/<name>          

              Where supported types (as of this writing) are:
              
              db
              cache
              app

              and the <name> is the name you are looking for.  As an example, the url for the billing service would be available
              as "app/billing", and its database url would be "db/billing"

GET_SECRET    This will query for the specified secret.  You will typically need to contact operations to get the correct
              key for these values

GET_HASH      Returns the git hash being used to generate the config.  This can be populated by passing in the GIT_HASH env variable or
              Calculated from the CHEF_ENV passed in (in which case it uses the "deploy_version" registered in consul.

GET_DEPLY_HASH Returns the git hash that is currently deployed for CHEF_ENV.  This is retreived from 'deploy_version/APP_NAME/CHEF_ENV' in               Consul.

GET_SP        Each environment defines a security posture that it used for credentials.  This will pull that security posture.

In Addition to the above functions, you can access environment variables passed into the template using the following format:

{{ env "VAR_NAME" }}

The following Environment Variables are available by default:

              CHEF_ENV    - The chef environment being run under (e.g. prod, stag, dev)
              CHEF_ROLE   - The chef role this template is for (e.g. api, core, billing, etc.)
              APP_NAME    - The name of the app (usually the github repo name)
              
Other values can be made available as well if needed.   Please contact Operations if you have a need for more.
  
---------------------------------------------------------------------------------- */}}
{{/* Get the value that is specified in the deploy_version consul tree for this app/env combination */}}
{{- define "GET_DEPLOY_HASH" }}
  {{- key ( printf "deploy_version/%s/%s" (env "APP_NAME") (env "CHEF_ENV") ) }}
{{- end -}}

{{/* Get the hash that we are going to use to instantiate this template */}}
{{- if env "GIT_HASH" }}
  {{- env "GIT_HASH" | scratch.Set "GIT_HASH" }}
{{- else }}
  {{- key ( printf "app/%s/%s" (env "APP_NAME") ( executeTemplate "GET_DEPLOY_HASH" ) ) | scratch.Set "GIT_HASH" }}
{{- end -}}

{{/* Function to get the hash */}}
{{- define "GET_HASH" }}
  {{- scratch.Get "GIT_HASH" }}
{{- end -}}

{{/* Function to get the value of an item stored in consul */}}
{{- define "GET_VALUE" }}
  {{- $config_hash := executeTemplate "GET_HASH" }}
  {{- $app_name := env "APP_NAME" }}
  {{- if keyExists ( printf "app/%s/%s/%s/%s" $app_name $config_hash . (env "CHEF_ENV") ) }}
    {{- key ( printf "app/%s/%s/%s/%s" $app_name $config_hash . (env "CHEF_ENV") ) }}
  {{- else }}
    {{- key ( printf "app/%s/%s/%s" $app_name $config_hash . ) }}
  {{- end }}
{{- end -}}

{{/* Function to get a service stored in consul */}}
{{- define "GET_SERVICE"}}
  {{- key (printf "service/%s/%s" . (env "CHEF_ENV") ) }}
{{- end -}}

{{/* Function to get a secret stored in vault */}}
{{- define "GET_SECRET"}}{{ with printf "secret/%s/%s" (executeTemplate "GET_SP") . | secret }}{{ .Data.value }}{{ end }}{{ end -}}
{{/* Function to get an ENV variable */}}
{{- define "GET_ENV"}}{{ env . }}{{ end -}}
{{/* Function to get the security posture for this ENV */}}
{{- define "GET_SP"}}{{ key (printf "security_posture/%s" (env "CHEF_ENV")) }}{{ end -}}
