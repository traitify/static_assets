job "static-assets-{{ env "CHEF_ENV" }}" {
  datacenters = ["awse"]
  type = "service"

  spread {
    attribute = "${attr.platform.aws.placement.availability-zone}"
  }

  spread {
    attribute = "${node.unique.name}"
  }

  constraint {
    attribute = "${meta.role}"
    value     = "{{ template "GET_VALUE" "infra/nomad/role" }}"
  }
  constraint {
    attribute = "${meta.env}"
    value     = "{{ env "CHEF_ENV" }}"
  }
  constraint {
    attribute = "${meta.allow_transferable_jobs}"
    value     = "true"
  }

# set our update policy
  update {
    max_parallel     = 1
    health_check     = "checks"
    min_healthy_time = "20s"
    healthy_deadline = "90s"
    progress_deadline = "300s"
    auto_revert      = {{ template "GET_VALUE" "infra/nomad/auto_revert" }}
    #canary           = 1
    #stagger          = "30s"
  }


  # reschedule if it fails
  reschedule {
    delay          = "30s"
    delay_function = "exponential"
    max_delay      = "5m"
    unlimited      = true
  }

  group "static-assets" {
    # set our restart policy
    restart {
      interval = "1m"
      attempts = 2
      delay    = "15s"
      mode     = "fail"
    }
    count = 2

    # needed for increased log file size
    ephemeral_disk {
      size    = "2600"
    }

    task "app" {
      # set this as the leader so the other tasks exit
      leader = true
      # all of the templates are already included in our container, however, we unfortunately cant use them until
      # this is resolved: https://github.com/hashicorp/nomad/issues/2383. Once it is we can remove the artifact
      # stanza
      artifact {
        source      = "https://jenkins-archive.traitify.com/{{ env "APP_NAME" }}/{{ env "APP_NAME" }}-config_templates-{{ template "GET_HASH" }}.tar.gz"
        destination = "/files"
      } 
      # turn it into the correct config
      template {
        source = "files/config_templates/apache/sites-enabled/app.conf.tmpl"
        destination = "local/etc/apache2/sites-enabled/app.conf"
        change_mode = "restart"
        perms = "664"
        splay = "10m"
        vault_grace = "15m"
      }
      template {
        source = "files/config_templates/apache/conf-enabled/traitify-logging.conf.tmpl"
        destination = "local/etc/apache2/conf-enabled/traitify-logging.conf"
        change_mode = "restart"
        perms = "664"
        splay = "10m"
        vault_grace = "15m"
      }
      template {
        source = "files/config_templates/apache/ports.conf.tmpl"
        destination = "local/etc/apache2/ports.conf"
        change_mode = "restart"
        perms = "664"
        splay = "10m"
        vault_grace = "15m"
      }
      # set our environment variables
      env {
        CHEF_ENV = "${meta.env}"
        APP_NAME = "static-assets"
        LOCAL_HOSTNAME = "${node.unique.name}"
        CHEF_ROLE = "${meta.role}"
        GIT_HASH = "{{ template "GET_HASH" }}"
        TASK = "app"
      }
      # grant access to secrets
      vault {
        policies = [ "app-{{ env "CHEF_ENV" }}-fileserve", "default" ]
        change_mode = "noop"
      }
      # our image setup
      driver = "docker"
      config {
        image = "{{ template "GET_VALUE" "infra/docker/remote_repo" }}{{ env "APP_NAME" }}:{{ template "GET_HASH" }}"
        command = "/usr/sbin/apachectl"
        args = ["-D", "FOREGROUND", "-k", "start" ]
        network_mode = "host"
        labels = {
          env = "${meta.env}"
          app_name = "{{ env "APP_NAME" }}"
        }
      }
      resources {
        cpu    = {{ template "GET_VALUE" "infra/nomad/resources/cpu" }}
        memory = {{ template "GET_VALUE" "infra/nomad/resources/memory" }}

        network {
          port "http" {}
        }
      }

      logs {
        max_files     = 5
        max_file_size = 500
      }

      # add in service discovery
      service {
        name = "static-assets-http"
        tags = [
          "${node.unique.name}", "host__${node.unique.name}",
          "{{ template "GET_HASH" }}", "version__{{ template "GET_HASH" }}",
          "${meta.env}", "env__${meta.env}",

          "traefik.enable=true",
          "traefik.tags=${meta.env}",
          "traefik.backend.loadbalancer.method=drr",
          "traefik.frontend.passHostHeader=true",
          "traefik.frontend.rule=Host:fileserve.traitify.com,fileserve-${meta.env}.traitify.com,fileserve.${meta.env}.awse.traitify.com,local.fileserve.service.consul;PathPrefixStrip:/static_assets"
        ]

        port = "http"

        # we only do a basic tcp check on the http port since all it does is forward to the https port
        check {
          name = "http"
          path = "/monitor/ping"
          initial_status = "critical"
          type     = "http"
          protocol = "http"
          port     = "http"
          interval = "5s"
          timeout  = "2s"
        }
      }
    }

    task "log-shipper" {
      # all of the templates are already included in our container, however, we unfortunately cant use them until
      # this is resolved: https://github.com/hashicorp/nomad/issues/2383. Once it is we can remove the artifact
      # stanza
      artifact {
        source      = "https://jenkins-archive.traitify.com/{{ env "APP_NAME" }}/{{ env "APP_NAME" }}-config_templates-{{ template "GET_HASH" }}.tar.gz"
        destination = "/files"
      } 
      # turn our config template into a real file
      template {
        source = "files/config_templates/remote-syslog2.yml.tmpl"
        destination = "local/remote-syslog2.yml"
        change_mode = "noop"
        perms = "664"
      }
      # set our environment variables
      env {
        CHEF_ENV = "${meta.env}"
        APP_NAME = "static-assets"
        LOCAL_HOSTNAME = "${node.unique.name}"
        GIT_HASH = "{{ template "GET_HASH" }}"
        TASK = "app"
      }
      driver = "docker"
      config {
        image = "{{ template "GET_VALUE" "infra/docker/remote_repo" }}{{ env "APP_NAME" }}:{{ template "GET_HASH" }}"
        command = "/usr/local/bin/remote_syslog"
        args = [ "-c", "/local/remote-syslog2.yml", "-D" ]
        network_mode = "host"
        labels = {
          env = "${meta.env}"
          app_name = "log-shipper"
        }
      }
      resources {
        cpu    = 100
        memory = 100
      }
    }

    task "log-rotator" {
      # all of the templates are already included in our container, however, we unfortunately cant use them until
      # this is resolved: https://github.com/hashicorp/nomad/issues/2383. Once it is we can remove the artifact
      # stanza
      artifact {
        source      = "https://jenkins-archive.traitify.com/{{ env "APP_NAME" }}/{{ env "APP_NAME" }}-config_templates-{{ template "GET_HASH" }}.tar.gz"
        destination = "/files"
      } 
      # turn our config template into a real file
      template {
        source = "files/config_templates/logrotate.conf.tmpl"
        destination = "local/logrotate.conf"
        change_mode = "noop"
        perms = "664"
      }
      # set our environment variables
      env {
        CHEF_ENV = "${meta.env}"
        APP_NAME = "static-assets"
        GIT_HASH = "{{ template "GET_HASH" }}"
      }
      driver = "docker"
      config {
        image = "{{ template "GET_VALUE" "infra/docker/remote_repo" }}{{ env "APP_NAME" }}:{{ template "GET_HASH" }}"
        command = "/files/run-as-service.sh"
        args = [ "-w", "60", "-c", "/usr/local/bin/logrotate -v --state /local/logrotate.status /local/logrotate.conf" ]
        network_mode = "host"
        labels = {
          env = "${meta.env}"
          app_name = "log-rotator"
        }
      }
      resources {
        cpu    = 100
        memory = 100
      }
    }
  }
}
